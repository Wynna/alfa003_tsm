////////////////////////////////////////////////////////////////////////////////
//
//  System Name : ACR Configuration File
//     Filename : tsm_subdual_toggle.nss
//    $Revision:: 236        $ current version of the file
//        $Date:: 2015-06-24#$ date the file was created or modified
//       Author : Wynna
//
//    Var Prefix:
//  Dependencies:
//
//  
//  Revision History
//  2015/06/24  Wynna  Inception
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes ////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#include "acr_trigger_i"
#include "acr_quest_i"
#include "acr_spawn_i"
#include "dmfi_inc_langexe" 




////////////////////////////////////////////////////////////////////////////////
// Constants ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Structures //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Global Variables ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Prototypes /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Definitions ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
void ACR_ApplyNLDDamageToCreature(object oTarget, int nSubdualDamage)
{
    int nNLDTotal = _GetNLDTotal(oTarget);
    int nHPMax = GetMaxHitPoints(oTarget);
    int nCap = nHPMax + 10;
    nNLDTotal = ((nNLDTotal + nSubdualDamage) > nCap) ? nCap :
            nNLDTotal + nSubdualDamage;
    _SetNLDTotal(oTarget, nNLDTotal);
    ACR_ApplyNLDEffects(oTarget, nNLDTotal);
}

void main()
{
   // Custom code goes here.
	object oPC = GetItemActivatedTarget();
	object oDM = GetItemActivator();
	if(oDM == OBJECT_INVALID)
		{oDM = OBJECT_SELF;}
    
	//Subdual toggle
	
		if(_GetNLDMode(oPC) == FALSE)
			{ACR_ToggleNLDMode(oPC);
			SendMessageToPC(oDM, GetName(oPC) + " subdual is now " + IntToString(_GetNLDMode(oPC)));
			}
		else if(!GetIsPC(oPC))	 			 
			{object oNewPC=CreateObject(OBJECT_TYPE_CREATURE, GetResRef(oPC), GetLocation(oPC));
			 int nDamage = GetMaxHitPoints(oPC) - GetCurrentHitPoints(oPC);
			 effect eDamage = EffectDamage(nDamage, DAMAGE_TYPE_MAGICAL, DAMAGE_POWER_NORMAL, TRUE);
			 int nSubdualDamage=_GetNLDTotal(oPC);
			 DelayCommand(1.0, _SetNLDTotal(oNewPC, nSubdualDamage));
			 DelayCommand(2.0, ApplyEffectToObject(DURATION_TYPE_INSTANT, eDamage, oNewPC));
			 DestroyObject(oPC);
			 SendMessageToPC(oDM, GetName(oNewPC) + " subdual is now " + IntToString(_GetNLDMode(oNewPC)));
			}
			
	
		
	   
}